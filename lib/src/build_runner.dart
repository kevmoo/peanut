import 'dart:async';
import 'dart:io';

import 'package:glob/glob.dart';
import 'package:path/path.dart' as p;

import 'utils.dart';

Future<String> runBuildRunner(
  String tempDir,
  String targetDir,
  String config,
  bool release,
  String workingDirectory,
) async {
  final args = [
    'run',
    'build_runner',
    'build',
    '--output',
    '$targetDir:$tempDir',
    release ? '--release' : '--no-release'
  ];

  if (config != null) {
    args.addAll(['--config', config]);
  }

  await runProcess(pubPath, args, workingDirectory: workingDirectory);

  final initialFiles =
      Directory(tempDir).listSync(recursive: true, followLinks: false);

  var deleteCount = 0;
  // TODO: use whereType when github.com/dart-lang/sdk/issues/32463 is fixed
  for (var file in initialFiles.where((i) => i is File)) {
    final relativePath = p.relative(file.path, from: tempDir);

    if (_badFileGlob.matches(relativePath)) {
      if (deleteCount == 0) {
        stdout.write('Deleting extra files from output directory');
      }
      stdout.write('.');
      file.deleteSync();
      deleteCount++;
    }
  }

  if (deleteCount > 0) {
    print('\nDeleted count: $deleteCount\n'
        '  Matching ${_globItems.map((e) => '"$e"').join(', ')}');
  }

  return args.join(' ');
}

const _globItems = {
  '**.dart',
  '**.dart.js.deps',
  '**.dart.js.tar.gz',
  '**.md',
  '**.module',
  '**.ng_placeholder', // Generated by pkg:angular
  '**.yaml',
  '.build.manifest',
  '.packages',
  'packages/\$sdk/**',
  'packages/analyzer/**',
  'packages/build_runner/**',
  'packages/build_web_compilers/**',
  'packages/node_preamble/**',
  'packages/package_resolver/**',
  'packages/test/**',
};

final _badFileGlob = Glob('{${_globItems.join(',')}}');
